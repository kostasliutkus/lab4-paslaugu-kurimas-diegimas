// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/service.proto
// </auto-generated>
// Original file comments:
// set the language version
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcService {
  /// <summary>
  ///this will translate into service and service client stubs
  /// </summary>
  public static partial class Track
  {
    static readonly string __ServiceName = "GrpcService.Track";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.Empty> __Marshaller_GrpcService_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.IntMsg> __Marshaller_GrpcService_IntMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.IntMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.GetTrackStateOutput> __Marshaller_GrpcService_GetTrackStateOutput = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.GetTrackStateOutput.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.SendVoteInput> __Marshaller_GrpcService_SendVoteInput = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.SendVoteInput.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.BoolMsg> __Marshaller_GrpcService_BoolMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.BoolMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::GrpcService.AddDistanceChangeInput> __Marshaller_GrpcService_AddDistanceChangeInput = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::GrpcService.AddDistanceChangeInput.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcService.Empty, global::GrpcService.IntMsg> __Method_GetRunnerUniqueId = new grpc::Method<global::GrpcService.Empty, global::GrpcService.IntMsg>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRunnerUniqueId",
        __Marshaller_GrpcService_Empty,
        __Marshaller_GrpcService_IntMsg);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcService.Empty, global::GrpcService.IntMsg> __Method_GetRefereeUniqueId = new grpc::Method<global::GrpcService.Empty, global::GrpcService.IntMsg>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRefereeUniqueId",
        __Marshaller_GrpcService_Empty,
        __Marshaller_GrpcService_IntMsg);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcService.Empty, global::GrpcService.GetTrackStateOutput> __Method_GetTrackState = new grpc::Method<global::GrpcService.Empty, global::GrpcService.GetTrackStateOutput>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTrackState",
        __Marshaller_GrpcService_Empty,
        __Marshaller_GrpcService_GetTrackStateOutput);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcService.SendVoteInput, global::GrpcService.BoolMsg> __Method_SendVote = new grpc::Method<global::GrpcService.SendVoteInput, global::GrpcService.BoolMsg>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendVote",
        __Marshaller_GrpcService_SendVoteInput,
        __Marshaller_GrpcService_BoolMsg);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::GrpcService.AddDistanceChangeInput, global::GrpcService.BoolMsg> __Method_AddDistanceChange = new grpc::Method<global::GrpcService.AddDistanceChangeInput, global::GrpcService.BoolMsg>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddDistanceChange",
        __Marshaller_GrpcService_AddDistanceChangeInput,
        __Marshaller_GrpcService_BoolMsg);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcService.ServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Track</summary>
    [grpc::BindServiceMethod(typeof(Track), "BindService")]
    public abstract partial class TrackBase
    {
      /// <summary>
      ///these will translate into a service operations
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.IntMsg> GetRunnerUniqueId(global::GrpcService.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.IntMsg> GetRefereeUniqueId(global::GrpcService.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.GetTrackStateOutput> GetTrackState(global::GrpcService.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.BoolMsg> SendVote(global::GrpcService.SendVoteInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::GrpcService.BoolMsg> AddDistanceChange(global::GrpcService.AddDistanceChangeInput request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Track</summary>
    public partial class TrackClient : grpc::ClientBase<TrackClient>
    {
      /// <summary>Creates a new client for Track</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TrackClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Track that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TrackClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TrackClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TrackClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///these will translate into a service operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcService.IntMsg GetRunnerUniqueId(global::GrpcService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRunnerUniqueId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///these will translate into a service operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcService.IntMsg GetRunnerUniqueId(global::GrpcService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRunnerUniqueId, null, options, request);
      }
      /// <summary>
      ///these will translate into a service operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcService.IntMsg> GetRunnerUniqueIdAsync(global::GrpcService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRunnerUniqueIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///these will translate into a service operations
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcService.IntMsg> GetRunnerUniqueIdAsync(global::GrpcService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRunnerUniqueId, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcService.IntMsg GetRefereeUniqueId(global::GrpcService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRefereeUniqueId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcService.IntMsg GetRefereeUniqueId(global::GrpcService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRefereeUniqueId, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcService.IntMsg> GetRefereeUniqueIdAsync(global::GrpcService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRefereeUniqueIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcService.IntMsg> GetRefereeUniqueIdAsync(global::GrpcService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRefereeUniqueId, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcService.GetTrackStateOutput GetTrackState(global::GrpcService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTrackState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcService.GetTrackStateOutput GetTrackState(global::GrpcService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTrackState, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcService.GetTrackStateOutput> GetTrackStateAsync(global::GrpcService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTrackStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcService.GetTrackStateOutput> GetTrackStateAsync(global::GrpcService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTrackState, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcService.BoolMsg SendVote(global::GrpcService.SendVoteInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendVote(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcService.BoolMsg SendVote(global::GrpcService.SendVoteInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendVote, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcService.BoolMsg> SendVoteAsync(global::GrpcService.SendVoteInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendVoteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcService.BoolMsg> SendVoteAsync(global::GrpcService.SendVoteInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendVote, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcService.BoolMsg AddDistanceChange(global::GrpcService.AddDistanceChangeInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddDistanceChange(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::GrpcService.BoolMsg AddDistanceChange(global::GrpcService.AddDistanceChangeInput request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddDistanceChange, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcService.BoolMsg> AddDistanceChangeAsync(global::GrpcService.AddDistanceChangeInput request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddDistanceChangeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::GrpcService.BoolMsg> AddDistanceChangeAsync(global::GrpcService.AddDistanceChangeInput request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddDistanceChange, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override TrackClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TrackClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(TrackBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetRunnerUniqueId, serviceImpl.GetRunnerUniqueId)
          .AddMethod(__Method_GetRefereeUniqueId, serviceImpl.GetRefereeUniqueId)
          .AddMethod(__Method_GetTrackState, serviceImpl.GetTrackState)
          .AddMethod(__Method_SendVote, serviceImpl.SendVote)
          .AddMethod(__Method_AddDistanceChange, serviceImpl.AddDistanceChange).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, TrackBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetRunnerUniqueId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.Empty, global::GrpcService.IntMsg>(serviceImpl.GetRunnerUniqueId));
      serviceBinder.AddMethod(__Method_GetRefereeUniqueId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.Empty, global::GrpcService.IntMsg>(serviceImpl.GetRefereeUniqueId));
      serviceBinder.AddMethod(__Method_GetTrackState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.Empty, global::GrpcService.GetTrackStateOutput>(serviceImpl.GetTrackState));
      serviceBinder.AddMethod(__Method_SendVote, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.SendVoteInput, global::GrpcService.BoolMsg>(serviceImpl.SendVote));
      serviceBinder.AddMethod(__Method_AddDistanceChange, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcService.AddDistanceChangeInput, global::GrpcService.BoolMsg>(serviceImpl.AddDistanceChange));
    }

  }
}
#endregion
