<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RunnerTranslationLayer</name>
    </assembly>
    <members>
        <member name="T:Servers.TrackController">
            <summary>
            Service. Class must be marked public, otherwise ASP.NET core runtime will not find it.
            
            Look into FromXXX attributes if you need to map inputs to custom parts of HTTP request.
            </summary>
        </member>
        <member name="F:Servers.TrackController.mLogic">
            <summary>
            Service logic. This is created in Server.StartServer() and received through DI in constructor.
            </summary>
        </member>
        <member name="M:Servers.TrackController.#ctor(Services.ITrackService)">
            <summary>
            Constructor
            </summary>
            <param name="logic">Logic to use. This will get passed through DI.</param>
        </member>
        <member name="M:Servers.TrackController.GetExampleReferee">
            <summary>
            This is a dummy endpoint to ensure RefereeDesc is included in Swagger.
            </summary>
            <returns>An example RefereeDesc object.</returns>
        </member>
        <member name="M:Servers.TrackController.GetExampleRunner">
            <summary>
            This is a dummy endpoint to ensure RefereeDesc is included in Swagger.
            </summary>
            <returns>An example RefereeDesc object.</returns>
        </member>
        <member name="M:Servers.TrackController.GetUniqueRefereeId">
            <summary>
            Get next unique ID from the server. Is used by Referees to acquire client ID's.
            </summary>
            <returns>Unique ID.</returns>
        </member>
        <member name="M:Servers.TrackController.GetUniqueRunnerId">
            <summary>
            Get next unique ID from the server. Is used by Runners to acquire client ID's.
            </summary>
            <returns>Unique ID.</returns>
        </member>
        <member name="M:Servers.TrackController.GetTrackState">
            <summary>
            Get current light state.
            </summary>
            <returns>Current light state.</returns>				
        </member>
        <member name="M:Servers.TrackController.AddDistanceChange(Services.RunnerDesc,System.Double)">
            <summary>
            Adds distance change to server variables
            </summary>
            <param name="runner">runner whos distance will be adjusted</param>
            <param name="distance">distance that will be added to the runner</param>
            <returns>true if track state is running and the change will be added, false otherwise</returns>
        </member>
        <member name="M:Servers.TrackController.SendVote(System.Int32,System.Boolean)">
            <summary>
            Process a vote add it to according counter
            </summary>
            <param name="id">id of runner</param>
            <param name="rating">True or false</param>
            <returns>True</returns>
        </member>
        <member name="F:Servers.Server.log">
            <summary>
            Logger for this class.
            </summary>
        </member>
        <member name="M:Servers.Server.ConfigureLogging">
            <summary>
            Configure loggin subsystem.
            </summary>
        </member>
        <member name="M:Servers.Server.Main(System.String[])">
            <summary>
            Program entry point.
            </summary>
            <param name="args">Command line arguments.</param>
        </member>
        <member name="M:Servers.Server.Run(System.String[])">
            <summary>
            Program body.
            </summary>
            <param name="args">Command line arguments.</param>
        </member>
        <member name="M:Servers.Server.StartServer(System.String[])">
            <summary>
            Starts integrated server.
            </summary>
            <param name="args">Command line arguments.</param>
        </member>
    </members>
</doc>
