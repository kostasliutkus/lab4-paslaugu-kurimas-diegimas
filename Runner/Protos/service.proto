//set the language version
syntax = "proto3";

//this will translate into C# namespace
package Services;

//enumeration
enum TrackState {
	GettingReady = 0;
	Running = 1;
    Done = 2;
}

//this will translate into service and service client stubs
service Track {    
	//these will translate into a service operations
	rpc GetRunnerUniqueId(Empty) returns (IntMsg);
    rpc GetRefereeUniqueId(Empty) returns (IntMsg);
	rpc GetTrackState(Empty) returns (GetTrackStateOutput);
	rpc SendVote(SendVoteInput) returns (BoolMsg);
	rpc AddDistanceChange(AddDistanceChangeInput) returns (BoolMsg);
}

//this is used for calls that do accept inputs or produce outputs
message Empty {    
}

//single value structures
message IntMsg {
	int32 value = 1;
}

message DoubleMsg {
	double value = 1;
}

message BoolMsg {
	bool value = 1;
}

//Track state output
message GetTrackStateOutput {
	TrackState value = 1;
}

message SendVoteInput {
    IntMsg id = 1;
    BoolMsg rating = 2;
}

message AddDistanceChangeInput {
    RunnerDesc runner = 1;
    DoubleMsg distance = 2;
}

//runner descriptor
message RunnerDesc {
	int32 RunnerId = 1;
	string RunnerNameSurname = 2;
}
//referee descriptor
message RefereeDesc {
	int32 RefereeId = 1;
    bool Vote = 2;
	string RefereeNameSurname = 3;
}